{"version":3,"sources":["types.js","defaults.js","../../node_modules/loadjs/dist/loadjs.umd.js","utils.js","support.js","console.js","fullscreen.js","i18n.js","captions.js","html5.js","controls.js","ui.js","listeners.js","storage.js","plugins/ads.js","plugins/vimeo.js","plugins/youtube.js","media.js","source.js","plyr.js"],"names":["providers","types","defaults","define","this","utils","input","instanceof","window","Plyr","getConstructor","Object","Number","isNaN","String","Boolean","Function","nullOrUndefined","Array","isArray","WeakMap","NodeList","Element","Text","Event","TextTrackCue","VTTCue","TextTrack","string","kind","test","array","nodeList","length","object","keys","constructor","document","documentMode","documentElement","style","navigator","userAgent","platform","url","responseType","Promise","resolve","reject","request","XMLHttpRequest","addEventListener","JSON","parse","responseText","e","response","Error","statusText","open","send","id","is","prefix","hasId","isCached","exists","querySelectorAll","injectSprite","data","innerHTML","body","insertBefore","childNodes","container","createElement","toggleHidden","setAttribute","support","storage","cached","localStorage","getItem","call","content","fetch","then","empty","result","setItem","stringify","catch","Math","floor","random","elements","wrapper","targets","from","reverse","forEach","element","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","type","attributes","text","setAttributes","textContent","target","removeElement","removeChild","lastChild","newChild","oldChild","replaceChild","entries","key","value","sel","existingAttributes","existing","split","selector","s","trim","className","replace","stripped","parts","start","charAt","class","hidden","hide","boolean","hasAttribute","removeAttribute","toggle","contains","classList","prototype","match","includes","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelector","controls","getElement","config","selectors","buttons","getElements","play","pause","restart","rewind","fastForward","mute","pip","airplay","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","currentTime","duration","seekTooltip","classNames","tooltip","error","debug","warn","toggleNativeControls","focused","activeElement","focusable","first","last","trap","event","keyCode","getFocusElement","shiftKey","focus","preventDefault","on","off","callback","passive","capture","function","Node","toggleListener","events","options","passiveListeners","elementsWithListeners","push","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","toggleState","pressed","getAttribute","state","current","max","toFixed","parseInt","time","displayHours","inverted","number","formatTime","format","slice","hours","getHours","mins","getMinutes","secs","getSeconds","find","RegExp","toString","toUpperCase","substr","toLowerCase","replaceAll","toTitleCase","toPascalCase","sources","source","shift","extend","filter","item","indexOf","reduce","prev","curr","abs","youtube","vimeo","regex","$2","parser","href","search","startsWith","parseUrl","hashes","params","hash","val","decodeURIComponent","map","encodeURIComponent","join","fragment","createDocumentFragment","firstChild","innerText","width","height","getRatio","w","h","ratio","transitionEndEvent","undefined","offsetHeight","provider","playsinline","api","ui","browser","getBrowser","canPlayInline","isIPhone","video","rangeInput","audio","webkitSetPresentationMode","WebKitPlaybackTargetAvailabilityEvent","media","isHTML5","canPlayType","isVideo","isAudio","supported","defineProperty","removeEventListener","range","matchMedia","noop","Console","enabled","console","log","bind","onChange","button","player","active","isIos","trapFocus","toggleFallback","scrollPosition","scrollX","scrollY","scrollTo","x","y","overflow","toggleClass","fallback","Fullscreen","property","update","native","iosNative","playing","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","cancelFullScreen","exitFullscreen","action","enter","exit","hasClass","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","prefixes","some","pre","i18n","getDeep","seekTime","title","isYouTube","textTracks","setCaptionsMenu","getAttributesFromSelector","insertAfter","isIE","URL","src","track","hostname","location","protocol","createObjectURL","blob","get","toggleCaptions","tracks","getTracks","language","userLanguage","setCue","mode","currentTrack","getCurrentTrack","activeCues","isVimeo","embed","enableTextTrack","label","cue","setText","getCueAsHTML","emptyElement","caption","html5","getSources","sizes","dedupe","mime","onLoadedMetaData","load","blankVideo","iconUrl","cors","host","svg4everybody","namespace","getIconUrl","iconPath","iconPrefix","icon","createElementNS","use","path","setAttributeNS","attr","badge","menu","buttonType","toCamelCase","labelPressed","iconPressed","control","createIcon","createLabel","updateRangeFill","suffix","list","checked","radio","faux","insertAdjacentHTML","forceHours","setRange","muted","setProgress","getElementsByTagName","nodeValue","getPercentage","buffered","isWebkit","setProperty","tooltips","percent","clientRect","getBoundingClientRect","visible","touch","pageX","left","parseFloat","updateTimeDisplay","invert","invertTime","seeking","updateProgress","hasDuration","displayDuration","paused","updateSeekTooltip","setting","tabs","panes","quality","toggleTab","checkMenu","getBadge","createBadge","sort","a","b","sorting","getLabel","createMenuItem","updateSetting","pane","lang","default","unshift","speed","values","tab","form","show","isMenuItem","isButton","stopPropagation","clone","position","opacity","name","scrollWidth","scrollHeight","getElementById","isTab","transitions","reducedMotion","size","getTabSize","restore","propertyName","createButton","createRange","createProgress","createTime","inner","home","back","setQualityMenu","getQualityOptions","setSpeedMenu","loadSprite","props","create","findElements","repaint","labels","uiSupported","listeners","inject","setup","loop","updateVolume","timeUpdate","checkPlaying","isTouch","ready","setTitle","poster","backgroundImage","setPoster","durationUpdate","isEmbed","iframe","enable","posterEnabled","loadPromise","loadImage","togglePoster","stopped","toggleControls","loading","timers","setTimeout","force","hideControls","hover","Listeners","lastKey","handleKey","toggleMenu","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","seekByKey","editable","togglePlay","increaseVolume","decreaseVolume","forward","keyboard","global","tabFocus","delay","hasAudio","resetOnEnd","checkLoading","ads","initialized","managerPromise","clickToPlay","ended","disableContextMenu","set","concat","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","hasCustomHandler","returned","showHomeTab","showTab","currentTarget","done","seekTo","toggleInvert","noTransition","webkitDirectionInvertedFromDevice","step","direction","deltaY","deltaX","Storage","store","json","removeItem","Ads","publisherId","manager","loader","cuePoints","safetyTimer","countdownTimer","google","ima","loadScript","urls","googleIMA","sdk","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","displayContainer","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","setInterval","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","cues","setVolume","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","splice","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","args","handlers","handler","apply","Date","now","base","buildUrlParams","assurePlaybackState","setAspectRatio","Vimeo","padding","paddingBottom","offset","transform","autoplay","parseVimeoId","embedContainer","replaceElement","thumbnail_large","pathname","Player","autopause","disableTextTrack","stop","setCurrentTime","selected","setPlaybackRate","setLoop","currentSrc","getVideoUrl","all","getVideoWidth","getVideoHeight","getAspectRatio","dimensions","setAutopause","getVideoTitle","getCurrentTime","getDuration","getTextTracks","stripHTML","frame","seconds","build","mapQualityUnit","mapQualityUnits","levels","level","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","videoId","getVideoData","items","snippet","currentId","parseYouTubeId","generateId","posterSrc","image","backgroundSize","message","instance","playbackRate","getPlaybackRate","getTitle","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","buffering","getVideoLoadedFraction","lastBuffered","seeked","getAvailableQualityLevels","unMute","wrap","insertElement","attribute","cancelRequests","check","crossorigin","addStyleHook","insertElements","failed","jQuery","original","tagName","getProviderByUrl","getUrlParams","truthy","webkitShowPlaybackTargetPicker","isEnterFullscreen","showEvents","delayEvents","toggled","soft","clear","unload","readyState","targetTime","end","fauxDuration","realDuration","min","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","closest","change","setLanguage","states","inline","webkitPresentationMode"],"mappings":"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","file":"plyr.js","sourcesContent":["// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\nexport default { providers, types };\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.10/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [\n            0.5,\n            0.75,\n            1,\n            1.25,\n            1.5,\n            1.75,\n            2,\n        ],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: [\n        'captions',\n        'quality',\n        'speed',\n    ],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api: 'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Plyr utils\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nimport support from './support';\nimport { providers } from './types';\n\nconst utils = {\n    // Check variable types\n    is: {\n        plyr(input) {\n            return this.instanceof(input, window.Plyr);\n        },\n        object(input) {\n            return this.getConstructor(input) === Object;\n        },\n        number(input) {\n            return this.getConstructor(input) === Number && !Number.isNaN(input);\n        },\n        string(input) {\n            return this.getConstructor(input) === String;\n        },\n        boolean(input) {\n            return this.getConstructor(input) === Boolean;\n        },\n        function(input) {\n            return this.getConstructor(input) === Function;\n        },\n        array(input) {\n            return !this.nullOrUndefined(input) && Array.isArray(input);\n        },\n        weakMap(input) {\n            return this.instanceof(input, window.WeakMap);\n        },\n        nodeList(input) {\n            return this.instanceof(input, window.NodeList);\n        },\n        element(input) {\n            return this.instanceof(input, window.Element);\n        },\n        textNode(input) {\n            return this.getConstructor(input) === Text;\n        },\n        event(input) {\n            return this.instanceof(input, window.Event);\n        },\n        cue(input) {\n            return this.instanceof(input, window.TextTrackCue) || this.instanceof(input, window.VTTCue);\n        },\n        track(input) {\n            return this.instanceof(input, TextTrack) || (!this.nullOrUndefined(input) && this.string(input.kind));\n        },\n        url(input) {\n            return !this.nullOrUndefined(input) && /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/.test(input);\n        },\n        nullOrUndefined(input) {\n            return input === null || typeof input === 'undefined';\n        },\n        empty(input) {\n            return (\n                this.nullOrUndefined(input) ||\n                ((this.string(input) || this.array(input) || this.nodeList(input)) && !input.length) ||\n                (this.object(input) && !Object.keys(input).length)\n            );\n        },\n        instanceof(input, constructor) {\n            return Boolean(input && constructor && input instanceof constructor);\n        },\n        getConstructor(input) {\n            return !this.nullOrUndefined(input) ? input.constructor : null;\n        },\n    },\n\n    // Unfortunately, due to mixed support, UA sniffing is required\n    getBrowser() {\n        return {\n            isIE: /* @cc_on!@ */ false || !!document.documentMode,\n            isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n            isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n            isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n        };\n    },\n\n    // Fetch wrapper\n    // Using XHR to avoid issues with older browsers\n    fetch(url, responseType = 'text') {\n        return new Promise((resolve, reject) => {\n            try {\n                const request = new XMLHttpRequest();\n\n                // Check for CORS support\n                if (!('withCredentials' in request)) {\n                    return;\n                }\n\n                request.addEventListener('load', () => {\n                    if (responseType === 'text') {\n                        try {\n                            resolve(JSON.parse(request.responseText));\n                        } catch (e) {\n                            resolve(request.responseText);\n                        }\n                    } else {\n                        resolve(request.response);\n                    }\n                });\n\n                request.addEventListener('error', () => {\n                    throw new Error(request.statusText);\n                });\n\n                request.open('GET', url, true);\n\n                // Set the required response type\n                request.responseType = responseType;\n\n                request.send();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    },\n\n    // Load an external script\n    loadScript(url) {\n        return new Promise((resolve, reject) => {\n            loadjs(url, {\n                success: resolve,\n                error: reject,\n            });\n        });\n    },\n\n    // Load an external SVG sprite\n    loadSprite(url, id) {\n        if (!utils.is.string(url)) {\n            return;\n        }\n\n        const prefix = 'cache-';\n        const hasId = utils.is.string(id);\n        let isCached = false;\n\n        const exists = () => document.querySelectorAll(`#${id}`).length;\n\n        function injectSprite(data) {\n            // Check again incase of race condition\n            if (hasId && exists()) {\n                return;\n            }\n\n            // Inject content\n            this.innerHTML = data;\n\n            // Inject the SVG to the body\n            document.body.insertBefore(this, document.body.childNodes[0]);\n        }\n\n        // Only load once if ID set\n        if (!hasId || !exists()) {\n            // Create container\n            const container = document.createElement('div');\n            utils.toggleHidden(container, true);\n\n            if (hasId) {\n                container.setAttribute('id', id);\n            }\n\n            // Check in cache\n            if (support.storage) {\n                const cached = window.localStorage.getItem(prefix + id);\n                isCached = cached !== null;\n\n                if (isCached) {\n                    const data = JSON.parse(cached);\n                    injectSprite.call(container, data.content);\n                    return;\n                }\n            }\n\n            // Get the sprite\n            utils\n                .fetch(url)\n                .then(result => {\n                    if (utils.is.empty(result)) {\n                        return;\n                    }\n\n                    if (support.storage) {\n                        window.localStorage.setItem(\n                            prefix + id,\n                            JSON.stringify({\n                                content: result,\n                            }),\n                        );\n                    }\n\n                    injectSprite.call(container, result);\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Generate a random ID\n    generateId(prefix) {\n        return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n    },\n\n    // Wrap an element\n    wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        const targets = elements.length ? elements : [elements];\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        Array.from(targets)\n            .reverse()\n            .forEach((element, index) => {\n                const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n                // Cache the current parent and sibling.\n                const parent = element.parentNode;\n                const sibling = element.nextSibling;\n\n                // Wrap the element (is automatically removed from its current\n                // parent).\n                child.appendChild(element);\n\n                // If the element had a sibling, insert the wrapper before\n                // the sibling to maintain the HTML structure; otherwise, just\n                // append it to the parent.\n                if (sibling) {\n                    parent.insertBefore(child, sibling);\n                } else {\n                    parent.appendChild(child);\n                }\n            });\n    },\n\n    // Create a DocumentFragment\n    createElement(type, attributes, text) {\n        // Create a new <element>\n        const element = document.createElement(type);\n\n        // Set all passed attributes\n        if (utils.is.object(attributes)) {\n            utils.setAttributes(element, attributes);\n        }\n\n        // Add text node\n        if (utils.is.string(text)) {\n            element.textContent = text;\n        }\n\n        // Return built element\n        return element;\n    },\n\n    // Inaert an element after another\n    insertAfter(element, target) {\n        target.parentNode.insertBefore(element, target.nextSibling);\n    },\n\n    // Insert a DocumentFragment\n    insertElement(type, parent, attributes, text) {\n        // Inject the new <element>\n        parent.appendChild(utils.createElement(type, attributes, text));\n    },\n\n    // Remove an element\n    removeElement(element) {\n        if (!utils.is.element(element) || !utils.is.element(element.parentNode)) {\n            return;\n        }\n\n        if (utils.is.nodeList(element) || utils.is.array(element)) {\n            Array.from(element).forEach(utils.removeElement);\n            return;\n        }\n\n        element.parentNode.removeChild(element);\n    },\n\n    // Remove all child elements\n    emptyElement(element) {\n        let { length } = element.childNodes;\n\n        while (length > 0) {\n            element.removeChild(element.lastChild);\n            length -= 1;\n        }\n    },\n\n    // Replace element\n    replaceElement(newChild, oldChild) {\n        if (!utils.is.element(oldChild) || !utils.is.element(oldChild.parentNode) || !utils.is.element(newChild)) {\n            return null;\n        }\n\n        oldChild.parentNode.replaceChild(newChild, oldChild);\n\n        return newChild;\n    },\n\n    // Set attributes\n    setAttributes(element, attributes) {\n        if (!utils.is.element(element) || utils.is.empty(attributes)) {\n            return;\n        }\n\n        Object.entries(attributes).forEach(([\n            key,\n            value,\n        ]) => {\n            element.setAttribute(key, value);\n        });\n    },\n\n    // Get an attribute object from a string selector\n    getAttributesFromSelector(sel, existingAttributes) {\n        // For example:\n        // '.test' to { class: 'test' }\n        // '#test' to { id: 'test' }\n        // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n        if (!utils.is.string(sel) || utils.is.empty(sel)) {\n            return {};\n        }\n\n        const attributes = {};\n        const existing = existingAttributes;\n\n        sel.split(',').forEach(s => {\n            // Remove whitespace\n            const selector = s.trim();\n            const className = selector.replace('.', '');\n            const stripped = selector.replace(/[[\\]]/g, '');\n\n            // Get the parts and value\n            const parts = stripped.split('=');\n            const key = parts[0];\n            const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n            // Get the first character\n            const start = selector.charAt(0);\n\n            switch (start) {\n                case '.':\n                    // Add to existing classname\n                    if (utils.is.object(existing) && utils.is.string(existing.class)) {\n                        existing.class += ` ${className}`;\n                    }\n\n                    attributes.class = className;\n                    break;\n\n                case '#':\n                    // ID selector\n                    attributes.id = selector.replace('#', '');\n                    break;\n\n                case '[':\n                    // Attribute selector\n                    attributes[key] = value;\n\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        return attributes;\n    },\n\n    // Toggle hidden\n    toggleHidden(element, hidden) {\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        let hide = hidden;\n\n        if (!utils.is.boolean(hide)) {\n            hide = !element.hasAttribute('hidden');\n        }\n\n        if (hide) {\n            element.setAttribute('hidden', '');\n        } else {\n            element.removeAttribute('hidden');\n        }\n    },\n\n    // Toggle class on an element\n    toggleClass(element, className, toggle) {\n        if (utils.is.element(element)) {\n            const contains = element.classList.contains(className);\n\n            element.classList[toggle ? 'add' : 'remove'](className);\n\n            return (toggle && !contains) || (!toggle && contains);\n        }\n\n        return null;\n    },\n\n    // Has class name\n    hasClass(element, className) {\n        return utils.is.element(element) && element.classList.contains(className);\n    },\n\n    // Element matches selector\n    matches(element, selector) {\n        const prototype = { Element };\n\n        function match() {\n            return Array.from(document.querySelectorAll(selector)).includes(this);\n        }\n\n        const matches = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n\n        return matches.call(element, selector);\n    },\n\n    // Find all elements\n    getElements(selector) {\n        return this.elements.container.querySelectorAll(selector);\n    },\n\n    // Find a single element\n    getElement(selector) {\n        return this.elements.container.querySelector(selector);\n    },\n\n    // Find the UI controls and store references in custom controls\n    // TODO: Allow settings menus with custom controls\n    findElements() {\n        try {\n            this.elements.controls = utils.getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: utils.getElements.call(this, this.config.selectors.buttons.play),\n                pause: utils.getElement.call(this, this.config.selectors.buttons.pause),\n                restart: utils.getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: utils.getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: utils.getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: utils.getElement.call(this, this.config.selectors.buttons.mute),\n                pip: utils.getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: utils.getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: utils.getElement.call(this, this.config.selectors.buttons.settings),\n                captions: utils.getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: utils.getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = utils.getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: utils.getElement.call(this, this.config.selectors.inputs.seek),\n                volume: utils.getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: utils.getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: utils.getElement.call(this, this.config.selectors.display.currentTime),\n                duration: utils.getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (utils.is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Get the focused element\n    getFocusElement() {\n        let focused = document.activeElement;\n\n        if (!focused || focused === document.body) {\n            focused = null;\n        } else {\n            focused = document.querySelector(':focus');\n        }\n\n        return focused;\n    },\n\n    // Trap focus inside container\n    trapFocus(element = null, toggle = false) {\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        const focusable = utils.getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n        const first = focusable[0];\n        const last = focusable[focusable.length - 1];\n\n        const trap = event => {\n            // Bail if not tab key or not fullscreen\n            if (event.key !== 'Tab' || event.keyCode !== 9) {\n                return;\n            }\n\n            // Get the current focused element\n            const focused = utils.getFocusElement();\n\n            if (focused === last && !event.shiftKey) {\n                // Move focus to first element that can be tabbed if Shift isn't used\n                first.focus();\n                event.preventDefault();\n            } else if (focused === first && event.shiftKey) {\n                // Move focus to last element that can be tabbed if Shift is used\n                last.focus();\n                event.preventDefault();\n            }\n        };\n\n        if (toggle) {\n            utils.on(this.elements.container, 'keydown', trap, false);\n        } else {\n            utils.off(this.elements.container, 'keydown', trap, false);\n        }\n    },\n\n    // Toggle event listener\n    toggleListener(elements, event, callback, toggle = false, passive = true, capture = false) {\n        // Bail if no elemetns, event, or callback\n        if (utils.is.empty(elements) || utils.is.empty(event) || !utils.is.function(callback)) {\n            return;\n        }\n\n        // If a nodelist is passed, call itself on each node\n        if (utils.is.nodeList(elements) || utils.is.array(elements)) {\n            // Create listener for each node\n            Array.from(elements).forEach(element => {\n                if (element instanceof Node) {\n                    utils.toggleListener.call(null, element, event, callback, toggle, passive, capture);\n                }\n            });\n\n            return;\n        }\n\n        // Allow multiple events\n        const events = event.split(' ');\n\n        // Build options\n        // Default to just the capture boolean for browsers with no passive listener support\n        let options = capture;\n\n        // If passive events listeners are supported\n        if (support.passiveListeners) {\n            options = {\n                // Whether the listener can be passive (i.e. default never prevented)\n                passive,\n                // Whether the listener is a capturing listener or not\n                capture,\n            };\n        }\n\n        // If a single node is passed, bind the event listener\n        events.forEach(type => {\n            if (!utils.elementsWithListeners) utils.elementsWithListeners = []\n            if (toggle) utils.elementsWithListeners.push({ elements, type, callback, options })\n\n            elements[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n        });\n    },\n\n    // Bind event handler\n    on(element, events = '', callback, passive = true, capture = false) {\n        utils.toggleListener(element, events, callback, true, passive, capture);\n    },\n\n    // Unbind event handler\n    off(element, events = '', callback, passive = true, capture = false) {\n        utils.toggleListener(element, events, callback, false, passive, capture);\n    },\n\n    // Trigger event\n    dispatchEvent(element, type = '', bubbles = false, detail = {}) {\n        // Bail if no element\n        if (!utils.is.element(element) || utils.is.empty(type)) {\n            return;\n        }\n\n        // Create and dispatch the event\n        const event = new CustomEvent(type, {\n            bubbles,\n            detail: Object.assign({}, detail, {\n                plyr: utils.is.plyr(this) ? this : null,\n            }),\n        });\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    },\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    toggleState(element, input) {\n        // If multiple elements passed\n        if (utils.is.array(element) || utils.is.nodeList(element)) {\n            Array.from(element).forEach(target => utils.toggleState(target, input));\n            return;\n        }\n\n        // Bail if no target\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        // Get state\n        const pressed = element.getAttribute('aria-pressed') === 'true';\n        const state = utils.is.boolean(input) ? input : !pressed;\n\n        // Set the attribute on target\n        element.setAttribute('aria-pressed', state);\n    },\n\n    // Get percentage\n    getPercentage(current, max) {\n        if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n            return 0;\n        }\n\n        return (current / max * 100).toFixed(2);\n    },\n\n    // Time helpers\n    getHours(value) {\n        return parseInt((value / 60 / 60) % 60, 10);\n    },\n    getMinutes(value) {\n        return parseInt((value / 60) % 60, 10);\n    },\n    getSeconds(value) {\n        return parseInt(value % 60, 10);\n    },\n\n    // Format time to UI friendly string\n    formatTime(time = 0, displayHours = false, inverted = false) {\n        // Bail if the value isn't a number\n        if (!utils.is.number(time)) {\n            return this.formatTime(null, displayHours, inverted);\n        }\n\n        // Format time component to add leading zero\n        const format = value => `0${value}`.slice(-2);\n\n        // Breakdown to hours, mins, secs\n        let hours = this.getHours(time);\n        const mins = this.getMinutes(time);\n        const secs = this.getSeconds(time);\n\n        // Do we need to display hours?\n        if (displayHours || hours > 0) {\n            hours = `${hours}:`;\n        } else {\n            hours = '';\n        }\n\n        // Render\n        return `${inverted ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n    },\n\n    // Replace all occurances of a string in a string\n    replaceAll(input = '', find = '', replace = '') {\n        return input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n    },\n\n    // Convert to title case\n    toTitleCase(input = '') {\n        return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n    },\n\n    // Convert string to pascalCase\n    toPascalCase(input = '') {\n        let string = input.toString();\n\n        // Convert kebab case\n        string = utils.replaceAll(string, '-', ' ');\n\n        // Convert snake case\n        string = utils.replaceAll(string, '_', ' ');\n\n        // Convert to title case\n        string = utils.toTitleCase(string);\n\n        // Convert to pascal case\n        return utils.replaceAll(string, ' ', '');\n    },\n\n    // Convert string to pascalCase\n    toCamelCase(input = '') {\n        let string = input.toString();\n\n        // Convert to pascal case\n        string = utils.toPascalCase(string);\n\n        // Convert first character to lowercase\n        return string.charAt(0).toLowerCase() + string.slice(1);\n    },\n\n    // Deep extend destination object with N more objects\n    extend(target = {}, ...sources) {\n        if (!sources.length) {\n            return target;\n        }\n\n        const source = sources.shift();\n\n        if (!utils.is.object(source)) {\n            return target;\n        }\n\n        Object.keys(source).forEach(key => {\n            if (utils.is.object(source[key])) {\n                if (!Object.keys(target).includes(key)) {\n                    Object.assign(target, { [key]: {} });\n                }\n\n                utils.extend(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n\n        return utils.extend(target, ...sources);\n    },\n\n    // Remove duplicates in an array\n    dedupe(array) {\n        if (!utils.is.array(array)) {\n            return array;\n        }\n\n        return array.filter((item, index) => array.indexOf(item) === index);\n    },\n\n    // Get the closest value in an array\n    closest(array, value) {\n        if (!utils.is.array(array) || !array.length) {\n            return null;\n        }\n\n        return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n    },\n\n    // Get the provider for a given URL\n    getProviderByUrl(url) {\n        // YouTube\n        if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n            return providers.youtube;\n        }\n\n        // Vimeo\n        if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{8,}(?=\\b|\\/)/.test(url)) {\n            return providers.vimeo;\n        }\n\n        return null;\n    },\n\n    // Parse YouTube ID from URL\n    parseYouTubeId(url) {\n        if (utils.is.empty(url)) {\n            return null;\n        }\n\n        const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    },\n\n    // Parse Vimeo ID from URL\n    parseVimeoId(url) {\n        if (utils.is.empty(url)) {\n            return null;\n        }\n\n        if (utils.is.number(Number(url))) {\n            return url;\n        }\n\n        const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    },\n\n    // Convert a URL to a location object\n    parseUrl(url) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        return parser;\n    },\n\n    // Get URL query parameters\n    getUrlParams(input) {\n        let search = input;\n\n        // Parse URL if needed\n        if (input.startsWith('http://') || input.startsWith('https://')) {\n            ({ search } = this.parseUrl(input));\n        }\n\n        if (this.is.empty(search)) {\n            return null;\n        }\n\n        const hashes = search.slice(search.indexOf('?') + 1).split('&');\n\n        return hashes.reduce((params, hash) => {\n            const [\n                key,\n                val,\n            ] = hash.split('=');\n\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    },\n\n    // Convert object to URL parameters\n    buildUrlParams(input) {\n        if (!utils.is.object(input)) {\n            return '';\n        }\n\n        return Object.keys(input)\n            .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(input[key])}`)\n            .join('&');\n    },\n\n    // Remove HTML from a string\n    stripHTML(source) {\n        const fragment = document.createDocumentFragment();\n        const element = document.createElement('div');\n        fragment.appendChild(element);\n        element.innerHTML = source;\n        return fragment.firstChild.innerText;\n    },\n\n    // Get aspect ratio for dimensions\n    getAspectRatio(width, height) {\n        const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n        const ratio = getRatio(width, height);\n        return `${width / ratio}:${height / ratio}`;\n    },\n\n    // Get the transition end event\n    get transitionEndEvent() {\n        const element = document.createElement('span');\n\n        const events = {\n            WebkitTransition: 'webkitTransitionEnd',\n            MozTransition: 'transitionend',\n            OTransition: 'oTransitionEnd otransitionend',\n            transition: 'transitionend',\n        };\n\n        const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n        return utils.is.string(type) ? events[type] : false;\n    },\n\n    // Force repaint of element\n    repaint(element) {\n        setTimeout(() => {\n            utils.toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            utils.toggleHidden(element, false);\n        }, 0);\n    },\n};\n\nexport default utils;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport utils from './utils';\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        let api = false;\n        let ui = false;\n        const browser = utils.getBrowser();\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n\n        switch (`${provider}:${type}`) {\n            case 'html5:video':\n                api = support.video;\n                ui = api && support.rangeInput && (!browser.isIPhone || canPlayInline);\n                break;\n\n            case 'html5:audio':\n                api = support.audio;\n                ui = api && support.rangeInput;\n                break;\n\n            case 'youtube:video':\n            case 'vimeo:video':\n                api = true;\n                ui = support.rangeInput && (!browser.isIPhone || canPlayInline);\n                break;\n\n            default:\n                api = support.audio && support.video;\n                ui = api && support.rangeInput;\n        }\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => {\n        const browser = utils.getBrowser();\n        return !browser.isIPhone && utils.is.function(utils.createElement('video').webkitSetPresentationMode);\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: utils.is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(type) {\n        const { media } = this;\n\n        try {\n            // Bail if no checking function\n            if (!this.isHTML5 || !utils.is.function(media.canPlayType)) {\n                return false;\n            }\n\n            // Check directly if codecs specified\n            if (type.includes('codecs=')) {\n                return media.canPlayType(type).replace(/no/, '');\n            }\n\n            // Type specific checks\n            if (this.isVideo) {\n                switch (type) {\n                    case 'video/webm':\n                        return media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, '');\n\n                    case 'video/mp4':\n                        return media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, '');\n\n                    case 'video/ogg':\n                        return media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, '');\n\n                    default:\n                        return false;\n                }\n            } else if (this.isAudio) {\n                switch (type) {\n                    case 'audio/mpeg':\n                        return media.canPlayType('audio/mpeg;').replace(/no/, '');\n\n                    case 'audio/ogg':\n                        return media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, '');\n\n                    case 'audio/wav':\n                        return media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, '');\n\n                    default:\n                        return false;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // Check for passive event listener support\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // https://www.youtube.com/watch?v=NPM6172J22g\n    passiveListeners: (() => {\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supported = false;\n        try {\n            const options = Object.defineProperty({}, 'passive', {\n                get() {\n                    supported = true;\n                    return null;\n                },\n            });\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        } catch (e) {\n            // Do nothing\n        }\n\n        return supported;\n    })(),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: utils.transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport utils from './utils';\n\nconst browser = utils.getBrowser();\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (utils.is.element(button)) {\n        utils.toggleState(button, this.active);\n    }\n\n    // Trigger an event\n    utils.dispatchEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        utils.trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    utils.toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        utils.on(document, this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`, () => {\n            // TODO: Filter for target??\n            onChange.call(this);\n        });\n\n        // Fullscreen toggle on double click\n        utils.on(this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (utils.is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (utils.is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = [\n            'webkit',\n            'moz',\n            'ms',\n        ];\n\n        prefixes.some(pre => {\n            if (utils.is.function(document[`${pre}ExitFullscreen`]) || utils.is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return utils.hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        utils.toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!utils.is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!utils.is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport utils from './utils';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (utils.is.empty(key) || utils.is.empty(config)) {\n            return '';\n        }\n\n        let string = utils.getDeep(config.i18n, key);\n\n        if (utils.is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([\n            key,\n            value,\n        ]) => {\n            string = utils.replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport utils from './utils';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (utils.is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!utils.is.element(this.elements.captions)) {\n            this.elements.captions = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.captions));\n\n            utils.insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Get browser info\n        const browser = utils.getBrowser();\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const href = utils.parseUrl(src);\n\n                if (href.hostname !== window.location.href.hostname && [\n                    'http:',\n                    'https:',\n                ].includes(href.protocol)) {\n                    utils\n                        .fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            utils.removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Try to load the value from storage\n        let active = this.storage.get('captions');\n\n        // Otherwise fall back to the default config\n        if (!utils.is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        // Set toggled state\n        this.toggleCaptions(active);\n\n        // Watch changes to textTracks and update captions menu\n        if (this.config.captions.update) {\n            utils.on(this.media.textTracks, 'addtrack removetrack', captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    update() {\n        // Update tracks\n        const tracks = captions.getTracks.call(this);\n        this.options.captions = tracks.map(({language}) => language);\n\n        // Set language if it hasn't been set already\n        if (!this.language) {\n            let { language } = this.config.captions;\n            if (language === 'auto') {\n                [ language ] = (navigator.language || navigator.userLanguage).split('-');\n            }\n            this.language = this.storage.get('language') || (language || '').toLowerCase();\n        }\n\n        // Toggle the class hooks\n        utils.toggleClass(this.elements.container, this.config.classNames.captions.enabled, !utils.is.empty(captions.getTracks.call(this)));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Set the captions language\n    setLanguage() {\n        // Setup HTML5 track rendering\n        if (this.isHTML5 && this.isVideo) {\n            captions.getTracks.call(this).forEach(track => {\n                // Show track\n                utils.on(track, 'cuechange', event => captions.setCue.call(this, event));\n\n                // Turn off native caption rendering to avoid double captions\n                // eslint-disable-next-line\n                track.mode = 'hidden';\n            });\n\n            // Get current track\n            const currentTrack = captions.getCurrentTrack.call(this);\n\n            // Check if suported kind\n            if (utils.is.track(currentTrack)) {\n                // If we change the active track while a cue is already displayed we need to update it\n                if (Array.from(currentTrack.activeCues || []).length) {\n                    captions.setCue.call(this, currentTrack);\n                }\n            }\n        } else if (this.isVimeo && this.captions.active) {\n            this.embed.enableTextTrack(this.language);\n        }\n    },\n\n    // Get the tracks\n    getTracks() {\n        // Return empty array at least\n        if (utils.is.nullOrUndefined(this.media)) {\n            return [];\n        }\n\n        // Only get accepted kinds\n        return Array.from(this.media.textTracks || []).filter(track => [\n            'captions',\n            'subtitles',\n        ].includes(track.kind));\n    },\n\n    // Get the current track for the current language\n    getCurrentTrack() {\n        const tracks = captions.getTracks.call(this);\n\n        if (!tracks.length) {\n            return null;\n        }\n\n        // Get track based on current language\n        let track = tracks.find(track => track.language.toLowerCase() === this.language);\n\n        // Get the <track> with default attribute\n        if (!track) {\n            track = utils.getElement.call(this, 'track[default]');\n        }\n\n        // Get the first track\n        if (!track) {\n            [track] = tracks;\n        }\n\n        return track;\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!utils.is.track(currentTrack) && support.textTracks && this.captions.active) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (utils.is.track(currentTrack)) {\n            if (!utils.is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!utils.is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Display active caption if it contains text\n    setCue(input) {\n        // Get the track from the event if needed\n        const track = utils.is.event(input) ? input.target : input;\n        const { activeCues } = track;\n        const active = activeCues.length && activeCues[0];\n        const currentTrack = captions.getCurrentTrack.call(this);\n\n        // Only display current track\n        if (track !== currentTrack) {\n            return;\n        }\n\n        // Display a cue, if there is one\n        if (utils.is.cue(active)) {\n            captions.setText.call(this, active.getCueAsHTML());\n        } else {\n            captions.setText.call(this, null);\n        }\n\n        utils.dispatchEvent.call(this, this.media, 'cuechange');\n    },\n\n    // Set the current caption\n    setText(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (utils.is.element(this.elements.captions)) {\n            const content = utils.createElement('span');\n\n            // Empty the container\n            utils.emptyElement(this.elements.captions);\n\n            // Default to empty\n            const caption = !utils.is.nullOrUndefined(input) ? input : '';\n\n            // Set the span content\n            if (utils.is.string(caption)) {\n                content.innerText = caption.trim();\n            } else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            this.elements.captions.appendChild(content);\n        } else {\n            this.debug.warn('No captions element to render to');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return null;\n        }\n\n        return this.media.querySelectorAll('source');\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        if (!this.isHTML5) {\n            return null;\n        }\n\n        // Get sources\n        const sources = html5.getSources.call(this);\n\n        if (utils.is.empty(sources)) {\n            return null;\n        }\n\n        // Get <source> with size attribute\n        const sizes = Array.from(sources).filter(source => !utils.is.empty(source.getAttribute('size')));\n\n        // If none, bail\n        if (utils.is.empty(sizes)) {\n            return null;\n        }\n\n        // Reduce to unique list\n        return utils.dedupe(sizes.map(source => Number(source.getAttribute('size'))));\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                if (utils.is.empty(sources)) {\n                    return null;\n                }\n\n                const matches = Array.from(sources).filter(source => source.getAttribute('src') === player.source);\n\n                if (utils.is.empty(matches)) {\n                    return null;\n                }\n\n                return Number(matches[0].getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                if (utils.is.empty(sources)) {\n                    return;\n                }\n\n                // Get matches for requested size\n                const matches = Array.from(sources).filter(source => Number(source.getAttribute('size')) === input);\n\n                // No matches for requested size\n                if (utils.is.empty(matches)) {\n                    return;\n                }\n\n                // Get supported sources\n                const supported = matches.filter(source => support.mime.call(player, source.getAttribute('type')));\n\n                // No supported sources\n                if (utils.is.empty(supported)) {\n                    return;\n                }\n\n                // Trigger change event\n                utils.dispatchEvent.call(player, player.media, 'qualityrequested', false, {\n                    quality: input,\n                });\n\n                // Get current state\n                const { currentTime, playing } = player;\n\n                // Set new source\n                player.media.src = supported[0].getAttribute('src');\n\n                // Restore time\n                const onLoadedMetaData = () => {\n                    player.currentTime = currentTime;\n                    player.off('loadedmetadata', onLoadedMetaData);\n                };\n                player.on('loadedmetadata', onLoadedMetaData);\n\n                // Load new source\n                player.media.load();\n\n                // Resume playing\n                if (playing) {\n                    player.play();\n                }\n\n                // Trigger change event\n                utils.dispatchEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        utils.removeElement(html5.getSources());\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport utils from './utils';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nconst controls = {\n\n\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls and store references in custom controls\n    // TODO: Allow settings menus with custom controls\n    findElements() {\n        try {\n            this.elements.controls = utils.getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: utils.getElements.call(this, this.config.selectors.buttons.play),\n                pause: utils.getElement.call(this, this.config.selectors.buttons.pause),\n                restart: utils.getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: utils.getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: utils.getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: utils.getElement.call(this, this.config.selectors.buttons.mute),\n                pip: utils.getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: utils.getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: utils.getElement.call(this, this.config.selectors.buttons.settings),\n                captions: utils.getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: utils.getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = utils.getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: utils.getElement.call(this, this.config.selectors.inputs.seek),\n                volume: utils.getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: utils.getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: utils.getElement.call(this, this.config.selectors.display.currentTime),\n                duration: utils.getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (utils.is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        utils.setAttributes(\n            icon,\n            utils.extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr) {\n        let text = i18n.get(type, this.config);\n        const attributes = Object.assign({}, attr);\n\n        switch (type) {\n            case 'pip':\n                text = 'PIP';\n                break;\n\n            case 'airplay':\n                text = 'AirPlay';\n                break;\n\n            default:\n                break;\n        }\n\n        if ('class' in attributes) {\n            attributes.class += ` ${this.config.classNames.hidden}`;\n        } else {\n            attributes.class = this.config.classNames.hidden;\n        }\n\n        return utils.createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (utils.is.empty(text)) {\n            return null;\n        }\n\n        const badge = utils.createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            utils.createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = utils.createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = utils.toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n\n            // Add aria attributes\n            attributes['aria-pressed'] = false;\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        utils.extend(attributes, utils.getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        utils.setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!utils.is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek label\n        const label = utils.createElement(\n            'label',\n            {\n                for: attributes.id,\n                id: `${attributes.id}-label`,\n                class: this.config.classNames.hidden,\n            },\n            i18n.get(type, this.config),\n        );\n\n        // Seek input\n        const input = utils.createElement(\n            'input',\n            utils.extend(\n                utils.getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-labelledby': `${attributes.id}-label`,\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return {\n            label,\n            input,\n        };\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = utils.createElement(\n            'progress',\n            utils.extend(\n                utils.getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(utils.createElement('span', null, '0'));\n\n            let suffix = '';\n            switch (type) {\n                case 'played':\n                    suffix = i18n.get('played', this.config);\n                    break;\n\n                case 'buffer':\n                    suffix = i18n.get('buffered', this.config);\n                    break;\n\n                default:\n                    break;\n            }\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = utils.getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = utils.createElement('div', utils.extend(attributes, {\n            class: `plyr__time ${attributes.class}`,\n            'aria-label': i18n.get(type, this.config),\n        }), '00:00');\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem(value, list, type, title, badge = null, checked = false) {\n        const item = utils.createElement('li');\n\n        const label = utils.createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = utils.createElement(\n            'input',\n            utils.extend(utils.getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = utils.createElement('span', { hidden: '' });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (utils.is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!utils.is.element(target) || !utils.is.number(time)) {\n            return;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = utils.getHours(this.duration) > 0;\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = utils.formatTime(time, forceHours, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (utils.is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (utils.is.element(this.elements.buttons.mute)) {\n            utils.toggleState(this.elements.buttons.mute, this.muted || this.volume === 0);\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!utils.is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !utils.is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = utils.is.number(input) ? input : 0;\n            const progress = utils.is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (utils.is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (utils.is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = utils.getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = utils.is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!utils.is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria value for https://github.com/sampotts/plyr/issues/905\n        range.setAttribute('aria-valuenow', range.value);\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !utils.is.element(this.elements.inputs.seek) ||\n            !utils.is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            utils.toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (utils.is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (utils.hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (utils.is.event(event) && [\n            'mouseenter',\n            'mouseleave',\n        ].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !utils.is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(this, this.elements.display.currentTime, invert ? this.duration - this.currentTime : this.currentTime, invert);\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no ui or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = utils.is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        utils.toggleHidden(this.elements.settings.tabs[setting], !toggle);\n    },\n\n    // Set the quality menu\n    // TODO: Vimeo support\n    setQualityMenu(options) {\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on config\n        if (utils.is.array(options)) {\n            this.options.quality = options.filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                const label = controls.getLabel.call(this, 'quality', quality);\n                controls.createMenuItem.call(this, quality, list, type, label, getBadge(quality));\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (utils.is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return utils.toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        switch (setting) {\n            case 'captions':\n                if (this.captions.active) {\n                    if (this.options.captions.length > 2 || !this.options.captions.some(lang => lang === 'enabled')) {\n                        value = this.captions.language;\n                    } else {\n                        value = 'enabled';\n                    }\n                } else {\n                    value = '';\n                }\n\n                break;\n\n            default:\n                value = !utils.is.empty(input) ? input : this[setting];\n\n                // Get default\n                if (utils.is.empty(value)) {\n                    value = this.config[setting].default;\n                }\n\n                // Unsupported value\n                if (!utils.is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                    this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                    return;\n                }\n\n                // Disabled value\n                if (!this.config[setting].options.includes(value)) {\n                    this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                    return;\n                }\n\n                break;\n        }\n\n        // Get the list if we need to\n        if (!utils.is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!utils.is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (utils.is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        utils.toggleHidden(this.elements.settings.tabs.loop, false);\n        utils.toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        options.forEach(option => {\n            const item = utils.createElement('li');\n\n            const button = utils.createElement(\n                'button',\n                utils.extend(utils.getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n\n        // Toggle the pane and tab\n        const toggle = captions.getTracks.call(this).length;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Re-map the tracks into just the data we need\n        const tracks = captions.getTracks.call(this).map(track => ({\n            language: !utils.is.empty(track.language) ? track.language : 'enabled',\n            label: captions.getLabel.call(this, track),\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        tracks.unshift({\n            language: '',\n            label: i18n.get('disabled', this.config),\n        });\n\n        // Generate options\n        tracks.forEach(track => {\n            controls.createMenuItem.call(\n                this,\n                track.language,\n                list,\n                'language',\n                track.label,\n                track.language !== 'enabled' ? controls.createBadge.call(this, track.language.toUpperCase()) : null,\n                track.language.toLowerCase() === this.language,\n            );\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (utils.is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [\n                0.5,\n                0.75,\n                1,\n                1.25,\n                1.5,\n                1.75,\n                2,\n            ];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            const label = controls.getLabel.call(this, 'speed', speed);\n            controls.createMenuItem.call(this, speed, list, type, label);\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !utils.is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        utils.toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!utils.is.element(form) || !utils.is.element(button)) {\n            return;\n        }\n\n        const show = utils.is.boolean(event) ? event : utils.is.element(form) && form.hasAttribute('hidden');\n\n        if (utils.is.event(event)) {\n            const isMenuItem = utils.is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (utils.is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (utils.is.element(form)) {\n            utils.toggleHidden(form, !show);\n            utils.toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        utils.removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(target = '') {\n        const { menu } = this.elements.settings;\n        const pane = document.getElementById(target);\n\n        // Nothing to show, bail\n        if (!utils.is.element(pane)) {\n            return;\n        }\n\n        // Are we targetting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"]:not([hidden])');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || ![\n                    'width',\n                    'height',\n                ].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                utils.off(container, utils.transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            utils.on(container, utils.transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        utils.toggleHidden(current, true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        utils.toggleHidden(pane, false);\n\n        const tabs = utils.getElements.call(this, `[aria-controls=\"${target}\"]`);\n        Array.from(tabs).forEach(tab => {\n            tab.setAttribute('aria-expanded', true);\n        });\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (utils.is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            const seek = controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            });\n            progress.appendChild(seek.label);\n            progress.appendChild(seek.input);\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = utils.createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = utils.createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            const range = controls.createRange.call(\n                this,\n                'volume',\n                utils.extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            );\n            volume.appendChild(range.label);\n            volume.appendChild(range.input);\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !utils.is.empty(this.config.settings)) {\n            const menu = utils.createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = utils.createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = utils.createElement('div');\n\n            const home = utils.createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = utils.createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = utils.createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = utils.createElement(\n                    'button',\n                    utils.extend(utils.getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = utils.createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = utils.createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                });\n\n                const back = utils.createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = utils.createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                utils.loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (utils.is.string(this.config.controls) || utils.is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (utils.is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([\n                key,\n                value,\n            ]) => {\n                result = utils.replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (utils.is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (utils.is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (utils.is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!utils.is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (utils.is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!utils.is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            utils.repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const labels = utils.getElements.call(\n                this,\n                [\n                    this.config.selectors.controls.wrapper,\n                    ' ',\n                    this.config.selectors.labels,\n                    ' .',\n                    this.config.classNames.hidden,\n                ].join(''),\n            );\n\n            Array.from(labels).forEach(label => {\n                utils.toggleClass(label, this.config.classNames.hidden, false);\n                utils.toggleClass(label, this.config.classNames.tooltip, true);\n                label.setAttribute('role', 'tooltip');\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport utils from './utils';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nconst ui = {\n    addStyleHook() {\n        utils.toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        utils.toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!utils.is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        utils.toggleClass(this.elements.container, this.config.classNames.pip.supported, support.pip && this.isHTML5 && this.isVideo);\n\n        // Check for airplay support\n        utils.toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        utils.toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        utils.toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            utils.dispatchEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster && this.elements.poster && !this.elements.poster.style.backgroundImage) {\n            ui.setPoster.call(this, this.poster);\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (utils.is.string(this.config.title) && !utils.is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n\n            // Set container label\n            this.elements.container.setAttribute('aria-label', this.config.title);\n        }\n\n        // If there's a play button, set label\n        if (utils.is.nodeList(this.elements.buttons.play)) {\n            Array.from(this.elements.buttons.play).forEach(button => {\n                button.setAttribute('aria-label', label);\n            });\n        }\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = utils.getElement.call(this, 'iframe');\n\n            if (!utils.is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !utils.is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        utils.toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    setPoster(poster) {\n        // Set property regardless of validity\n        this.media.setAttribute('poster', poster);\n\n        // Bail if element is missing\n        if (!utils.is.element(this.elements.poster)) {\n            return Promise.reject();\n        }\n\n        // Load the image, and set poster if successful\n        const loadPromise = utils.loadImage(poster)\n            .then(() => {\n                this.elements.poster.style.backgroundImage = `url('${poster}')`;\n                Object.assign(this.elements.poster.style, {\n                    backgroundImage: `url('${poster}')`,\n                    // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                    backgroundSize: '',\n                });\n                ui.togglePoster.call(this, true);\n                return poster;\n            });\n\n        // Hide the element if the poster can't be loaded (otherwise it will just be a black element covering the video)\n        loadPromise.catch(() => ui.togglePoster.call(this, false));\n\n        // Return the promise so the caller can use it as well\n        return loadPromise;\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        utils.toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        utils.toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        utils.toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set ARIA state\n        utils.toggleState(this.elements.buttons.play, this.playing);\n\n        // Only update controls on non timeupdate events\n        if (utils.is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = [\n            'stalled',\n            'waiting',\n        ].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport utils from './utils';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!utils.is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54,\n                56,\n                57,\n                32,\n                75,\n                38,\n                40,\n                77,\n                39,\n                37,\n                70,\n                67,\n                73,\n                76,\n                79,\n            ];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = utils.getFocusElement();\n            if (utils.is.element(focused) && utils.matches(focused, this.player.config.selectors.editable)) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        utils.toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n\n        // Clean up\n        utils.off(document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            utils.toggleListener(window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        utils.toggleListener(document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        utils.on(document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            utils.on(this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        utils.on(this.player.elements.container, 'focusout', event => {\n            utils.toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n\n        // Add classname to tabbed elements\n        utils.on(this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                utils.toggleClass(utils.getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        utils.on(this.player.elements.container, 'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen', event => {\n            const { controls } = this.player.elements;\n\n            // Remove button states for fullscreen\n            if (event.type === 'enterfullscreen') {\n                controls.pressed = false;\n                controls.hover = false;\n            }\n\n            // Show, then hide after a timeout unless another control event occurs\n            const show = [\n                'touchstart',\n                'touchmove',\n                'mousemove',\n            ].includes(event.type);\n\n            let delay = 0;\n\n            if (show) {\n                ui.toggleControls.call(this.player, true);\n                // Use longer timeout for touch devices\n                delay = this.player.touch ? 3000 : 2000;\n            }\n\n            // Clear timer\n            clearTimeout(this.player.timers.controls);\n            // Timer to prevent flicker when seeking\n            this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n        });\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        utils.on(this.player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(this.player, event));\n\n        // Display duration\n        utils.on(this.player.media, 'durationchange loadeddata loadedmetadata', event => controls.durationUpdate.call(this.player, event));\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        utils.on(this.player.media, 'loadeddata', () => {\n            utils.toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            utils.toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n        });\n\n        // Handle the media finishing\n        utils.on(this.player.media, 'ended', () => {\n            // Show poster on end\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                // Restart\n                this.player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        utils.on(this.player.media, 'progress playing seeking seeked', event => controls.updateProgress.call(this.player, event));\n\n        // Handle volume changes\n        utils.on(this.player.media, 'volumechange', event => controls.updateVolume.call(this.player, event));\n\n        // Handle play/pause\n        utils.on(this.player.media, 'playing play pause ended emptied timeupdate', event => ui.checkPlaying.call(this.player, event));\n\n        // Loading state\n        utils.on(this.player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(this.player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        utils.on(this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = utils.getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!utils.is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            utils.on(wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            utils.on(\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        utils.on(this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n        });\n\n        // Speed change\n        utils.on(this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        utils.on(this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        utils.on(this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n        });\n\n        // Caption language change\n        utils.on(this.player.media, 'languagechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'captions');\n\n            // Save to storage\n            this.player.storage.set({ language: this.player.language });\n        });\n\n        // Captions toggle\n        utils.on(this.player.media, 'captionsenabled captionsdisabled', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'captions');\n\n            // Save to storage\n            this.player.storage.set({ captions: this.player.captions.active });\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        utils.on(this.player.media, this.player.config.events.concat([\n            'keyup',\n            'keydown',\n        ]).join(' '), event => {\n            let detail = {};\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            utils.dispatchEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n        });\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = utils.is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && utils.is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const on = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = utils.is.function(customHandler);\n\n            utils.on(element, type, event => proxy(event, defaultHandler, customHandlerKey), passive && !hasCustomHandler);\n        };\n\n        // Play/pause toggle\n        on(this.player.elements.buttons.play, 'click', this.player.togglePlay, 'play');\n\n        // Pause\n        on(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        on(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        on(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        on(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        on(this.player.elements.buttons.captions, 'click', this.player.toggleCaptions);\n\n        // Fullscreen toggle\n        on(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        on(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        on(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        on(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        on(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Go back to home tab on click\n            const showHomeTab = () => {\n                const id = `plyr-settings-${this.player.id}-home`;\n                controls.showTab.call(this.player, id);\n            };\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (utils.matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.language = event.target.value;\n                        showHomeTab();\n                    },\n                    'language',\n                );\n            } else if (utils.matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                        showHomeTab();\n                    },\n                    'quality',\n                );\n            } else if (utils.matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                        showHomeTab();\n                    },\n                    'speed',\n                );\n            } else {\n                const tab = event.target;\n                controls.showTab.call(this.player, tab.getAttribute('aria-controls'));\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        on(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        on(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = [\n                'mouseup',\n                'touchend',\n                'keyup',\n            ].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        on(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (utils.is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !utils.is.element(this.player.elements.display.duration)) {\n            on(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        on(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            on(utils.getElements.call(this.player, 'input[type=\"range\"]'), 'input', event => {\n                controls.updateRangeFill.call(this.player, event.target);\n            });\n        }\n\n        // Seek tooltip\n        on(this.player.elements.progress, 'mouseenter mouseleave mousemove', event => controls.updateSeekTooltip.call(this.player, event));\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        on(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        on(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = [\n                'mousedown',\n                'touchstart',\n            ].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        on(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            utils.toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    utils.toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        on(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n                const step = 1 / 50;\n                let direction = 0;\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    } else {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    } else {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    }\n                }\n\n                // Don't break page scrolling at max and min\n                if ((direction === 1 && this.player.media.volume < 1) || (direction === -1 && this.player.media.volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n\n    // Reset on destroy\n    clear() {\n        this.global(false);\n    }\n}\n\nexport default Listeners;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport utils from './utils';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (utils.is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return utils.is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!utils.is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (utils.is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        utils.extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport utils from '../utils';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return this.player.isVideo && this.player.config.ads.enabled && !utils.is.empty(this.publisherId);\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!utils.is.object(window.google) || !utils.is.object(window.google.ima)) {\n                utils\n                    .loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${utils.buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = utils.createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, event => this.onAdsManagerLoaded(event), false);\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = utils.formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!utils.is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (utils.is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = utils.createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            utils.dispatchEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (utils.is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (utils.is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (utils.is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!utils.is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!utils.is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\nimport utils from './../utils';\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        utils.dispatchEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        utils.toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!utils.is.object(window.Vimeo)) {\n            utils\n                .loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const ratio = utils.is.string(input) ? input.split(':') : this.config.ratio.split(':');\n        const padding = 100 / ratio[0] * ratio[1];\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = utils.buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (utils.is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = utils.parseVimeoId(source);\n\n        // Build an iframe\n        const iframe = utils.createElement('iframe');\n        const src = utils.format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Inject the package\n        const wrapper = utils.createElement('div', { class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = utils.replaceElement(wrapper, player.media);\n\n        // Get poster image\n        utils.fetch(utils.format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (utils.is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href);\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                utils.dispatchEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(paused && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => paused && embed.pause())\n                    // Restore volume\n                    .then(() => paused && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        utils.dispatchEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    utils.dispatchEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = utils.is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    utils.dispatchEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = utils.is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([\n            player.embed.getVideoWidth(),\n            player.embed.getVideoHeight(),\n        ]).then(dimensions => {\n            const ratio = utils.getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            utils.dispatchEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', data => {\n            let cue = null;\n\n            if (data.cues.length) {\n                cue = utils.stripHTML(data.cues[0].text);\n            }\n\n            captions.setText.call(player, cue);\n        });\n\n        player.embed.on('loaded', () => {\n            if (utils.is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            utils.dispatchEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            utils.dispatchEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                utils.dispatchEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            utils.dispatchEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            utils.dispatchEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            utils.dispatchEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from './../controls';\nimport ui from './../ui';\nimport utils from './../utils';\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    switch (input) {\n        case 'hd2160':\n            return 2160;\n\n        case 2160:\n            return 'hd2160';\n\n        case 'hd1440':\n            return 1440;\n\n        case 1440:\n            return 'hd1440';\n\n        case 'hd1080':\n            return 1080;\n\n        case 1080:\n            return 'hd1080';\n\n        case 'hd720':\n            return 720;\n\n        case 720:\n            return 'hd720';\n\n        case 'large':\n            return 480;\n\n        case 480:\n            return 'large';\n\n        case 'medium':\n            return 360;\n\n        case 360:\n            return 'medium';\n\n        case 'small':\n            return 240;\n\n        case 240:\n            return 'small';\n\n        default:\n            return 'default';\n    }\n}\n\nfunction mapQualityUnits(levels) {\n    if (utils.is.empty(levels)) {\n        return levels;\n    }\n\n    return utils.dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        utils.dispatchEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        utils.toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (utils.is.object(window.YT) && utils.is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            utils.loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (utils.is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (utils.is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (utils.is.string(key) && !utils.is.empty(key)) {\n            const url = utils.format(this.config.urls.youtube.api, videoId, key);\n\n            utils\n                .fetch(url)\n                .then(result => {\n                    if (utils.is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!utils.is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (utils.is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = utils.parseYouTubeId(source);\n        const id = utils.generateId(player.provider);\n        const container = utils.createElement('div', { id });\n        player.media = utils.replaceElement(container, player.media);\n\n        // Set poster image\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        utils.loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => utils.loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => utils.loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            });\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // If we've already fired an error, don't do it again\n                    // YouTube fires onError twice\n                    if (utils.is.object(player.media.error)) {\n                        return;\n                    }\n\n                    const detail = {\n                        code: event.data,\n                    };\n\n                    // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                    switch (event.data) {\n                        case 2:\n                            detail.message =\n                                'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.';\n                            break;\n\n                        case 5:\n                            detail.message =\n                                'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.';\n                            break;\n\n                        case 100:\n                            detail.message =\n                                'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.';\n                            break;\n\n                        case 101:\n                        case 150:\n                            detail.message = 'The owner of the requested video does not allow it to be played in embedded players.';\n                            break;\n\n                        default:\n                            detail.message = 'An unknown error occured';\n                            break;\n                    }\n\n                    player.media.error = detail;\n\n                    utils.dispatchEvent.call(player, player.media, 'error');\n                },\n                onPlaybackQualityChange() {\n                    utils.dispatchEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    utils.dispatchEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            utils.dispatchEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            const quality = input;\n\n                            // Set via API\n                            instance.setPlaybackQuality(mapQualityUnit(quality));\n\n                            // Trigger request event\n                            utils.dispatchEvent.call(player, player.media, 'qualityrequested', false, {\n                                quality,\n                            });\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            utils.dispatchEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = utils.is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            utils.dispatchEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    utils.dispatchEvent.call(player, player.media, 'timeupdate');\n                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            utils.dispatchEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            utils.dispatchEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [\n                        1,\n                        2,\n                    ].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        utils.dispatchEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            utils.dispatchEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                utils.dispatchEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                utils.dispatchEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    utils.dispatchEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(player, mapQualityUnits(instance.getAvailableQualityLevels()));\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    utils.dispatchEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport utils from './utils';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        utils.toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        utils.toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            utils.toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = utils.createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            utils.wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = utils.createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isEmbed) {\n            switch (this.provider) {\n                case 'youtube':\n                    youtube.setup.call(this);\n                    break;\n\n                case 'vimeo':\n                    vimeo.setup.call(this);\n                    break;\n\n                default:\n                    break;\n            }\n        } else if (this.isHTML5) {\n            html5.extend.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport { providers } from './types';\nimport ui from './ui';\nimport utils from './utils';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (utils.is.string(attributes)) {\n            utils.insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (utils.is.array(attributes)) {\n            attributes.forEach(attribute => {\n                utils.insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!utils.is.object(input) || !('sources' in input) || !input.sources.length) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                utils.removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (utils.is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                this.type = input.type;\n                this.provider = !utils.is.empty(input.sources[0].provider) ? input.sources[0].provider : providers.html5;\n\n                // Check for support\n                this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n                // Create new markup\n                switch (`${this.provider}:${this.type}`) {\n                    case 'html5:video':\n                        this.media = utils.createElement('video');\n                        break;\n\n                    case 'html5:audio':\n                        this.media = utils.createElement('audio');\n                        break;\n\n                    case 'youtube:video':\n                    case 'vimeo:video':\n                        this.media = utils.createElement('div', {\n                            src: input.sources[0].src,\n                        });\n                        break;\n\n                    default:\n                        break;\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (utils.is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!utils.is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', input.sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.2.4\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport { providers, types } from './types';\nimport defaults from './defaults';\nimport support from './support';\nimport utils from './utils';\n\nimport Console from './console';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport Storage from './storage';\nimport Ads from './plugins/ads';\n\nimport captions from './captions';\nimport controls from './controls';\nimport media from './media';\nimport source from './source';\nimport ui from './ui';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (utils.is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || utils.is.nodeList(this.media) || utils.is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = utils.extend(\n            {},\n            defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: null,\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n            captions: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (utils.is.nullOrUndefined(this.media) || !utils.is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        // TODO: Investigate a better solution as I suspect this causes reported double load issues?\n        setTimeout(() => {\n            const clone = this.media.cloneNode(true);\n\n            // Prevent the clone autoplaying\n            if (clone.getAttribute('autoplay')) {\n                clone.pause();\n            }\n\n            this.elements.original = clone;\n        }, 0);\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n        let params = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (utils.is.element(iframe)) {\n                    // Detect provider\n                    url = iframe.getAttribute('src');\n                    this.provider = utils.getProviderByUrl(url);\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    params = utils.getUrlParams(url);\n                    if (!utils.is.empty(params)) {\n                        const truthy = [\n                            '1',\n                            'true',\n                        ];\n\n                        if (truthy.includes(params.autoplay)) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(params.loop)) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(params.playsinline);\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (utils.is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!utils.is.element(this.elements.container)) {\n            this.elements.container = utils.createElement('div');\n            utils.wrap(this.media, this.elements.container);\n        }\n\n        // Allow focus to be captured\n        this.elements.container.setAttribute('tabindex', 0);\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            utils.on(this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!utils.is.function(this.media.play)) {\n            return null;\n        }\n\n        // If ads are enabled, wait for them first\n        /* if (this.ads.enabled && !this.ads.initialized) {\n            return this.ads.managerPromise.then(() => this.ads.play()).catch(() => this.media.play());\n        } */\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !utils.is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended && (this.isHTML5 ? this.media.readyState > 2 : true));\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = utils.is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.media.load();\n        } else if (utils.is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (utils.is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (utils.is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        let targetTime = 0;\n\n        if (utils.is.number(input)) {\n            targetTime = input;\n        }\n\n        // Normalise targetTime\n        if (targetTime < 0) {\n            targetTime = 0;\n        } else if (targetTime > this.duration) {\n            targetTime = this.duration;\n        }\n\n        // Set\n        this.media.currentTime = targetTime;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (utils.is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // True duration\n        const realDuration = this.media ? Number(this.media.duration) : 0;\n\n        // If custom duration is funky, use regular duration\n        return !Number.isNaN(fauxDuration) ? fauxDuration : realDuration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (utils.is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!utils.is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!utils.is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!utils.is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (utils.is.number(step) ? step : 1);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume - (utils.is.number(step) ? step : 1);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!utils.is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!utils.is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (utils.is.number(input)) {\n            speed = input;\n        }\n\n        if (!utils.is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!utils.is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        let quality = null;\n\n        if (!utils.is.empty(input)) {\n            quality = Number(input);\n        }\n\n        if (!utils.is.number(quality) || quality === 0) {\n            quality = this.storage.get('quality');\n        }\n\n        if (!utils.is.number(quality)) {\n            quality = this.config.quality.selected;\n        }\n\n        if (!utils.is.number(quality)) {\n            quality = this.config.quality.default;\n        }\n\n        if (!this.options.quality.length) {\n            return;\n        }\n\n        if (!this.options.quality.includes(quality)) {\n            const closest = utils.closest(this.options.quality, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${closest} instead`);\n            quality = closest;\n        }\n\n        // Update config\n        this.config.quality.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = utils.is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a HTML5 video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isHTML5 || !this.isVideo) {\n            this.debug.warn('Poster can only be set on HTML5 video');\n            return;\n        }\n\n        if (utils.is.string(input)) {\n            this.media.setAttribute('poster', input);\n        }\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isHTML5 || !this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = utils.is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // If the method is called without parameter, toggle based on current value\n        const show = utils.is.boolean(input) ? input : !this.elements.container.classList.contains(this.config.classNames.captions.active);\n\n        // Nothing to change...\n        if (this.captions.active === show) {\n            return;\n        }\n\n        // Set global\n        this.captions.active = show;\n\n        // Toggle state\n        utils.toggleState(this.elements.buttons.captions, this.captions.active);\n\n        // Add class hook\n        utils.toggleClass(this.elements.container, this.config.classNames.captions.active, this.captions.active);\n\n        // Trigger an event\n        utils.dispatchEvent.call(this, this.media, this.captions.active ? 'captionsenabled' : 'captionsdisabled');\n    }\n\n    /**\n     * Set the captions language\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        // Nothing specified\n        if (!utils.is.string(input)) {\n            return;\n        }\n\n        // If empty string is passed, assume disable captions\n        if (utils.is.empty(input)) {\n            this.toggleCaptions(false);\n            return;\n        }\n\n        // Normalize\n        const language = input.toLowerCase();\n\n        // Check for support\n        if (!this.options.captions.includes(language)) {\n            this.debug.warn(`Unsupported language option: ${language}`);\n            return;\n        }\n\n        // Ensure captions are enabled\n        this.toggleCaptions(true);\n\n        // Enabled only\n        if (language === 'enabled') {\n            return;\n        }\n\n        // If nothing to change, bail\n        if (this.language === language) {\n            return;\n        }\n\n        // Update config\n        this.captions.language = language;\n\n        // Clear caption\n        captions.setText.call(this, null);\n\n        // Update captions\n        captions.setLanguage.call(this);\n\n        // Trigger an event\n        utils.dispatchEvent.call(this, this.media, 'languagechange');\n    }\n\n    /**\n     * Get the current captions language\n     */\n    get language() {\n        return this.captions.language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = utils.is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} toggle - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // We need controls of course...\n        if (!utils.is.element(this.elements.controls)) {\n            return;\n        }\n\n        // Don't hide if no UI support or it's audio\n        if (!this.supported.ui || this.isAudio) {\n            return;\n        }\n\n        let delay = 0;\n        let show = toggle;\n        let isEnterFullscreen = false;\n\n        // Get toggle state if not set\n        if (!utils.is.boolean(toggle)) {\n            if (utils.is.event(toggle)) {\n                // Is the enter fullscreen event\n                isEnterFullscreen = toggle.type === 'enterfullscreen';\n\n                // Events that show the controls\n                const showEvents = [\n                    'touchstart',\n                    'touchmove',\n                    'mouseenter',\n                    'mousemove',\n                    'focusin',\n                ];\n\n                // Events that delay hiding\n                const delayEvents = [\n                    'touchmove',\n                    'touchend',\n                    'mousemove',\n                ];\n\n                // Whether to show controls\n                show = showEvents.includes(toggle.type);\n\n                // Delay hiding on move events\n                if (delayEvents.includes(toggle.type)) {\n                    delay = 2000;\n                }\n\n                // Delay a little more for keyboard users\n                if (!this.touch && toggle.type === 'focusin') {\n                    delay = 3000;\n                    utils.toggleClass(this.elements.controls, this.config.classNames.noTransition, true);\n                }\n            } else {\n                show = utils.hasClass(this.elements.container, this.config.classNames.hideControls);\n            }\n        }\n\n        // Clear timer on every call\n        clearTimeout(this.timers.controls);\n\n        // If the mouse is not over the controls, set a timeout to hide them\n        if (show || this.paused || this.loading) {\n            // Check if controls toggled\n            const toggled = utils.toggleClass(this.elements.container, this.config.classNames.hideControls, false);\n\n            // Trigger event\n            if (toggled) {\n                utils.dispatchEvent.call(this, this.media, 'controlsshown');\n            }\n\n            // Always show controls when paused or if touch\n            if (this.paused || this.loading) {\n                return;\n            }\n\n            // Delay for hiding on touch\n            if (this.touch) {\n                delay = 3000;\n            }\n        }\n\n        // If toggle is false or if we're playing (regardless of toggle),\n        // then set the timer to hide the controls\n        if (!show || this.playing) {\n            this.timers.controls = setTimeout(() => {\n                // We need controls of course...\n                if (!utils.is.element(this.elements.controls)) {\n                    return;\n                }\n\n                // If the mouse is over the controls (and not entering fullscreen), bail\n                if ((this.elements.controls.pressed || this.elements.controls.hover) && !isEnterFullscreen) {\n                    return;\n                }\n\n                // Restore transition behaviour\n                if (!utils.hasClass(this.elements.container, this.config.classNames.hideControls)) {\n                    utils.toggleClass(this.elements.controls, this.config.classNames.noTransition, false);\n                }\n\n                // Set hideControls class\n                const toggled = utils.toggleClass(this.elements.container, this.config.classNames.hideControls, this.config.hideControls);\n\n                // Trigger event and close menu\n                if (toggled) {\n                    utils.dispatchEvent.call(this, this.media, 'controlshidden');\n\n                    if (this.config.controls.includes('settings') && !utils.is.empty(this.config.settings)) {\n                        controls.toggleMenu.call(this, false);\n                    }\n                }\n            }, delay);\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        utils.on(this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        utils.off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    utils.removeElement(this.elements.buttons.play);\n                    utils.removeElement(this.elements.captions);\n                    utils.removeElement(this.elements.controls);\n                    utils.removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (utils.is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                this.listeners.clear();\n\n                // Replace the container with the original element provided\n                utils.replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                utils.dispatchEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (utils.is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                utils.elementsWithListeners.forEach(({ elements, type, callback, options }) => {\n                    elements.removeEventListener(type, callback, options)\n                })\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Type specific stuff\n        switch (`${this.provider}:${this.type}`) {\n            case 'html5:video':\n            case 'html5:audio':\n                // Clear timeout\n                clearTimeout(this.timers.loading);\n\n                // Restore native video controls\n                ui.toggleNativeControls.call(this, true);\n\n                // Clean up\n                done();\n\n                break;\n\n            case 'youtube:video':\n                // Clear timers\n                clearInterval(this.timers.buffering);\n                clearInterval(this.timers.playing);\n\n                // Destroy YouTube API\n                if (this.embed !== null && utils.is.function(this.embed.destroy)) {\n                    this.embed.destroy();\n                }\n\n                // Clean up\n                done();\n\n                break;\n\n            case 'vimeo:video':\n                // Destroy Vimeo API\n                // then clean up (wait, to prevent postmessage errors)\n                if (this.embed !== null) {\n                    this.embed.unload().then(done);\n                }\n\n                // Vimeo does not always return\n                setTimeout(done, 200);\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return utils.loadSprite(url, id);\n    }\n}\n\nexport default Plyr;\n"]}